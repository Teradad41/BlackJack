(()=>{"use strict";var e={913:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DELAY=t.STATUSCOLOR=t.HOUSECARD=t.MAINFIELD=t.STARTPAGE=void 0,t.STARTPAGE=document.getElementById("startPage"),t.MAINFIELD=document.getElementById("mainPage"),t.HOUSECARD=document.getElementById("houseCardDiv"),t.STATUSCOLOR={SURRENDER:"bg-gradient-to-br from-red-500 via-red-600 to-red-700",STAND:"bg-gradient-to-br from-green-500 via-green-600 to-green-700",HIT:"bg-gradient-to-br from-yellow-400 via-yellow-500 to-yellow-600",DOUBLE:"bg-gradient-to-br from-blue-500 via-blue-600 to-blue-700",BUST:"bg-gradient-to-br from-pink-700 via-pink-800 to-pink-900",BROKEN:"bg-black",BLACKJACK:"bg-gradient-to-br from-cyan-500 to-blue-500","ON TURN":"bg-gradient-to-br from-pink-400 via-pink-500 to-pink-600"},t.DELAY=function(e){return new Promise((t=>setTimeout(t,e)))}},603:function(e,t,n){var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(i,r){function a(e){try{l(s.next(e))}catch(e){r(e)}}function o(e){try{l(s.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}l((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.Controller=void 0;const i=n(693),r=n(47),a=n(766),o=n(217),l=n(487),d=n(913),c=n(594),u=n(489);class h{static renderStartPage(){i.StartView.render()}static startBlackJack(e){const t=new c.Table(e[1].getGameType());t.setPlayers(e),t.setGamePhase("betting"),t.blackjackAssignPlayerHands(),a.MainView.render(t),o.BetView.render(t)}static playerActingPhase(e,t){return s(this,void 0,void 0,(function*(){e.setGamePhase("acting"),t.innerHTML="",yield(0,d.DELAY)(500),["houseCardDiv","bot1CardDiv","userCardDiv","bot2CardDiv"].forEach(((t,n)=>{const s="houseCardDiv"===t?"initial":void 0;r.CardView.rotateCards(t,s),0===n&&a.MainView.setHouseScore(e,"initial"),n>0&&a.MainView.setPlayerScore(e.getPlayers()[n-1],t.replace("CardDiv",""))})),e.getPlayers().filter((e=>"ai"===e.getType())).forEach((e=>{const t=e.aiPlayerDecideBetAmount();a.MainView.setBotBetAmount(e,t),a.MainView.setBotOwnChips(e,e.getChips()-t)})),yield(0,d.DELAY)(700);const n=e.getPlayers(),s=["bot1","player","bot2"];for(let i=0;i<n.length;i++)yield this.handlePlayerTurn(e,n[i],s[i],t);yield h.processPlayerActionPhase(e,e.getHouse(),"house"),h.evaluatingWinnersPhase(e)}))}static evaluatingWinnersPhase(e){return s(this,void 0,void 0,(function*(){e.setGamePhase("evaluatingWinners"),yield(0,d.DELAY)(2e3),u.ResultModalView.render(e)}))}static roundOverPhase(e){e.setGamePhase("roundOver"),e.incrementRound(),a.MainView.setStatusField("WAITING","house"),a.MainView.setStatusField("WAITING","player"),e.blackjackClearHandsAndBets(),e.blackjackAssignPlayerHands(),e.getDeck().resetDeck(),a.MainView.render(e),o.BetView.render(e)}static processPlayerActionPhase(e,t,n){return s(this,void 0,void 0,(function*(){for(yield(0,d.DELAY)(500),a.MainView.setStatusField("ON TURN",n),"house"===n&&(yield(0,d.DELAY)(500),r.CardView.rotateCards(`${n}CardDiv`),a.MainView.setHouseScore(e)),yield(0,d.DELAY)(1e3);t.getHandScore()<17;)yield(0,d.DELAY)(500),l.ActionView.addNewCardToPlayer(t,e,n),a.MainView.setStatusField("HIT",n),yield(0,d.DELAY)(700),r.CardView.rotateCards(`${n}CardDiv`),yield(0,d.DELAY)(1e3),"house"===n?a.MainView.setHouseScore(e):a.MainView.setPlayerScore(t,n),yield(0,d.DELAY)(700);const s=()=>21===t.getHandScore()&&2===t.getHand().length?"blackjack":t.getHandScore()>=17&&t.getHandScore()<=21?"stand":"bust";a.MainView.setStatusField(s().toUpperCase(),n),t.setGameStatus(s())}))}static handlePlayerTurn(e,t,n,i){return s(this,void 0,void 0,(function*(){return"user"===t.getType()?(a.MainView.setStatusField("ON TURN",n),new Promise((t=>l.ActionView.render(e,i,t)))):h.processPlayerActionPhase(e,t,n)}))}}t.Controller=h},863:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Card=void 0,t.Card=class{constructor(e,t){this.suit=e,this.rank=t}getSuit(){return this.suit}getRank(){return this.rank}getRankNumber(){return"string"==typeof this.rank?"A"===this.rank?11:"J"===this.rank||"Q"===this.rank||"K"===this.rank?10:parseInt(this.rank,10):0}}},511:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Deck=void 0;const s=n(863);class i{constructor(e){this.gameType=e,this.deck=[],"blackjack"===this.gameType&&(this.deck=i.generateDeck())}static generateDeck(){const e=[],t=["H","D","C","S"],n=["A","2","3","4","5","6","7","8","9","10","J","Q","K"];for(const i of t)for(const t of n)e.push(new s.Card(i,t));return e}shuffle(){for(let e=this.deck.length-1;e>=0;e--){const t=Math.floor(Math.random()*(e+1));[this.deck[e],this.deck[t]]=[this.deck[t],this.deck[e]]}}resetDeck(){this.deck=i.generateDeck(),this.shuffle()}drawOne(){return this.deck.shift()}}t.Deck=i},37:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GameDecision=void 0,t.GameDecision=class{constructor(e,t){this.action=e,this.amount=t}getAction(){return this.action}getAmount(){return this.amount}setAction(e){this.action=e}setAmount(e){this.amount=e}}},430:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Player=void 0;const s=n(37);t.Player=class{constructor(e,t,n,s=400){this.name=e,this.type=t,this.gameType=n,this.chips=s,this.hand=[],this.bet=0,this.winAmount=0,this.gameStatus="betting"}getName(){return this.name}getGameStatus(){return this.gameStatus}getGameType(){return this.gameType}getChips(){return this.chips}setChips(e){this.chips=e}getWinAmount(){return this.winAmount}setWinAmount(e){this.winAmount=e}getBet(){return this.bet}setBet(e){this.bet=e}getHand(){return this.hand}addHand(e){this.hand.push(e)}setHand(e){this.hand=e}setGameStatus(e){this.gameStatus=e}clearHand(){this.hand=[]}clearBet(){this.bet=0}getType(){return this.type}promptPlayer(){const e=this.gameStatus,t=this.bet;return new s.GameDecision(e,t)}isBlackJack(){return 21===this.getHandScore()&&2===this.hand.length}checkFinishedAction(){const e=this.getGameStatus().toLowerCase();return"broken"===e||"stand"===e||"bust"===e||"surrender"===e||"blackjack"===e||"double"===e}aiPlayerDecideBetAmount(){if("broke"===this.getGameStatus())return 0;let e=this.getChips()/5;return 5*Math.floor(Math.random()*(e/5-5)+5)}getHandScore(){let e=0,t=0;for(const n of this.hand)e+=n.getRankNumber(),"A"===n.getRank()&&t++;for(;e>21&&t>0;)e-=10,t--;return e}}},594:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Table=void 0;const s=n(511),i=n(430);t.Table=class{constructor(e,t=[5,20,50,100]){this.gameType=e,this.betDenomination=t,this.gamePhase="betting",this.deck=new s.Deck(e),this.deck.shuffle(),this.turnCorner=0,this.round=1,this.resultsLog=[],this.players=[],this.house=new i.Player("house","house",this.gameType)}getGameType(){return this.gameType}getPlayers(){return this.players}setPlayers(e){this.players=e}getHouse(){return this.house}getBetDenomation(){return this.betDenomination}getGamePhase(){return this.gamePhase}setGamePhase(e){this.gamePhase=e}getDeck(){return this.deck}getRound(){return this.round}incrementRound(){this.round++}evaluateTable(e){}blackjackEvaluateAndGetRoundResults(){return""}blackjackAssignPlayerHands(){for(const e of this.players){const t=this.checkNotUndefinedAndGetTwo();void 0!==t&&e.setHand(t)}const e=this.checkNotUndefinedAndGetTwo();void 0!==e&&this.house.setHand(e)}checkNotUndefinedAndGetTwo(){const e=this.deck.drawOne(),t=this.deck.drawOne();return void 0!==e&&void 0!==t?[e,t]:void 0}blackjackClearHandsAndBets(){this.players.forEach((e=>{e.clearHand(),e.clearBet()})),this.house.clearHand(),this.house.clearBet()}getTurnPlayer(){return this.players[this.turnCorner%this.players.length]}haveTurn(e){"roundOver"!==this.gamePhase&&(this.getTurnPlayer().promptPlayer(),this.turnCorner++)}onFirstPlayer(){return this.turnCorner%this.players.length==0}onLastPlayer(){return this.turnCorner%this.players.length==2}allPlayerActionsResolved(){return this.players.filter((e=>{const t=e.getGameStatus().toLowerCase();return"broken"===t||"stand"===t||"bust"===t||"surrender"===t||"blackjack"===t||"double"===t})).length===this.players.length}}},487:function(e,t,n){var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(i,r){function a(e){try{l(s.next(e))}catch(e){r(e)}}function o(e){try{l(s.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,o)}l((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.ActionView=void 0;const i=n(766),r=n(913),a=n(47),o=n(913);class l{static render(e,t,n){var r,d,c,u;return s(this,void 0,void 0,(function*(){const h=e.getPlayers()[1];let v=!1;t.innerHTML='\n        <div class="flex justify-around items-center pt-[3rem]">\n            <div class="flex flex-col items-center justify-center px-6">\n                <button id="surrenderBtn" class="btn bg-gradient-to-br from-red-500 to-red-800 h-[4.5rem] w-[4.5rem] rounded-full hover:opacity-60">\n                    <i class="fas fa-flag fa-2xl"></i>\n                </button>\n                <div class="font-bold text-center pt-2">SURRENDER</div>\n            </div>\n            <div class="flex flex-col items-center justify-center px-8">\n                <button id="standBtn" class="btn btn-sp bg-gradient-to-br from-green-600 to-green-800 h-[4.5rem] w-[4.5rem] rounded-full hover:opacity-60">\n                    <i class="fas fa-hand fa-2xl"></i>\n                </button>\n                <div class="font-bold text-center pt-2">STAND</div>\n            </div>\n            <div class="flex flex-col items-center justify-center px-8">\n                <button id="hitBtn" class="btn btn-sp bg-gradient-to-br from-yellow-300 to-yellow-500 h-[4.5rem] w-[4.5rem] rounded-full hover:opacity-60">\n                    <i class="fa-solid fa-copy fa-2xl"></i>\n                </button>\n                <div class="font-bold text-center pt-2">HIT</div>\n            </div>\n            <div class="flex flex-col items-center justify-center px-8">\n                <button id="doubleBtn" class="btn bg-gradient-to-br from-blue-500 to-blue-800 h-[4.5rem] w-[4.5rem] rounded-full hover:opacity-60">\n                    <i class="fas fa-coins fa-2xl"></i>\n                </button>\n                <div class="font-bold text-center pt-2">DOUBLE</div>\n            </div>\n        </div>\n        ';const b=[{selector:"#surrenderBtn",status:"SURRENDER"},{selector:"#standBtn",status:"STAND"},{selector:"#hitBtn",status:"HIT"},{selector:"#doubleBtn",status:"DOUBLE"}],p=e=>{h.setGameStatus(`${e}`),h.checkFinishedAction()&&!v&&(v=!0,n())};e.getPlayers()[1].isBlackJack()&&(yield(0,o.DELAY)(500),i.MainView.setStatusField("BLACKJACK","player"),l.disableButtons(t),yield(0,o.DELAY)(500),p("blackjack")),null===(r=t.querySelector("#surrenderBtn"))||void 0===r||r.addEventListener("click",(()=>{p("surrender")})),null===(d=t.querySelector("#standBtn"))||void 0===d||d.addEventListener("click",(()=>{p("stand")})),null===(c=t.querySelector("#hitBtn"))||void 0===c||c.addEventListener("click",(()=>s(this,void 0,void 0,(function*(){l.addNewCardToPlayer(h,e,"player"),yield(0,o.DELAY)(700),a.CardView.rotateCards("userCardDiv"),i.MainView.setPlayerScore(h,"user");const n=h.getHandScore();let s="hit";if(yield(0,o.DELAY)(700),n>21)i.MainView.setStatusField("BUST","player"),s="bust";else{if(21!==n)return void l.ableButtons(t);i.MainView.setStatusField("STAND","player"),s="stand"}yield(0,o.DELAY)(500),p(s)})))),null===(u=t.querySelector("#doubleBtn"))||void 0===u||u.addEventListener("click",(()=>s(this,void 0,void 0,(function*(){l.addNewCardToPlayer(h,e,"player"),yield(0,o.DELAY)(700),a.CardView.rotateCards("userCardDiv"),i.MainView.setPlayerScore(h,"user");const t=h.getBet();i.MainView.setPlayerBetAmount(h,2*t),i.MainView.setPlayerOwnChips(h,h.getChips()-t),yield(0,o.DELAY)(1e3);const n=h.getHandScore()<=21?"DOUBLE":"BUST";i.MainView.setStatusField(n,"player"),p(n.toLowerCase())}))));for(const e of b)this.bindAction(t,e.selector,e.status)}))}static bindAction(e,t,n){const s=e.querySelector(t);null==s||s.addEventListener("click",(()=>{i.MainView.setStatusField(n,"player"),this.disableButtons(e)}))}static disableButtons(e){Array.from(e.querySelectorAll(".btn")).forEach((e=>{e.disabled=!0,e.classList.add("opacity-60")}))}static ableButtons(e){Array.from(e.querySelectorAll(".btn-sp")).forEach((e=>{e.disabled=!1,e.classList.remove("opacity-60")}))}static addNewCardToPlayer(e,t,n){const s=null===r.MAINFIELD||void 0===r.MAINFIELD?void 0:r.MAINFIELD.querySelector(`#${{house:"houseCardDiv",bot1:"bot1CardDiv",player:"userCardDiv",bot2:"bot2CardDiv"}[n]}`),i=t.getDeck().drawOne();if(s&&i){e.addHand(i);const t="bot1"===n||"bot2"===n?"botSize":"normal";s.innerHTML+=a.CardView.renderCard(i,t)}}}t.ActionView=l},217:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BetView=void 0;const s=n(603),i=n(913);t.BetView=class{static render(e){var t,n;if(!i.MAINFIELD)return;const r=e.getPlayers(),a=i.MAINFIELD.querySelector("#betOrActionDiv");a.innerHTML=`\n    <div class="flex flex-col justify-center items-center px-7 py-3">\n        <div class="flex justify-around py-6">\n            <div class="px-2">\n                <div class="chip w-16 h-16 bg-red-500 rounded-full shadow-xl flex justify-center items-center cursor-pointer hover:opacity-80" data-chips="${e.getBetDenomation()[0].toString()}">\n                <div class="w-12 h-12 bg-white rounded-full flex justify-center items-center">\n                    <p class="text-gray-800 text-lg font-bold pb-1">$${e.getBetDenomation()[0].toString()}</p>\n                </div>\n            </div>\n        </div>\n        <div class="px-2">\n            <div class="chip w-16 h-16 bg-green-500 rounded-full shadow-xl flex justify-center items-center cursor-pointer hover:opacity-80" data-chips="${e.getBetDenomation()[1].toString()}">\n                <div class="w-12 h-12 bg-white rounded-full flex justify-center items-center">\n                    <p class="text-gray-800 text-lg font-bold pb-1">$${e.getBetDenomation()[1].toString()}</p>\n                </div>\n            </div>\n        </div>\n        <div class="px-2">\n            <div class="chip w-16 h-16 bg-blue-700 rounded-full shadow-xl flex justify-center items-center cursor-pointer hover:opacity-80" data-chips="${e.getBetDenomation()[2].toString()}">\n                <div class="w-12 h-12 bg-white rounded-full flex justify-center items-center">\n                    <p class="text-gray-800 text-lg font-bold pb-1">$${e.getBetDenomation()[2].toString()}</p>\n                </div>\n            </div> \n        </div>\n        <div class="px-2">\n            <div class="chip w-16 h-16 bg-gray-800 rounded-full shadow-xl flex justify-center items-center cursor-pointer hover:opacity-80" data-chips="${e.getBetDenomation()[3].toString()}">\n                <div class="w-12 h-12 bg-white rounded-full flex justify-center items-center">\n                    <p class="text-gray-800 text-lg font-bold pb-1">$${e.getBetDenomation()[3].toString()}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="flex justify-between">\n        <button id="clearBtn" class="text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-2 focus:outline-none focus:ring-red-700 shadow-lg shadow-red-600/50 font-bold rounded-lg w-32 py-2.5 mx-3">\n        CLEAR\n        </button>\n        <button id="dealBtn" class="text-white bg-gradient-to-r from-green-500 via-green-600 to-green-700 hover:opacity-80 focus:ring-2 focus:outline-none focus: ring-green-600 shadow-lg shadow-green-600/50 font-bold rounded-lg w-32 py-2.5 mx-3">DEAL\n        </button>\n    </div>\n    `;const o=i.MAINFIELD.querySelector("#onBetChips"),l=i.MAINFIELD.querySelector("#ownChips");[...a.querySelectorAll(".chip")].forEach((e=>{e.addEventListener("click",(()=>{const t=parseInt(o.innerHTML||"0",10),n=e.getAttribute("data-chips");if(null!==n){const e=t+parseInt(n,10),s=r[1].getChips();e<=s&&(o.innerHTML=e.toString(),l.innerHTML=(s-e).toString())}}))})),null===(t=a.querySelector("#clearBtn"))||void 0===t||t.addEventListener("click",(()=>{null!==o.innerHTML&&(o.innerHTML="0",l.innerHTML=r[1].getChips().toString())})),null===(n=a.querySelector("#dealBtn"))||void 0===n||n.addEventListener("click",(()=>{const t=parseInt(o.innerHTML,10),n=parseInt(l.innerHTML,10);0!==t&&(r[1].setBet(t),r[1].setChips(n),s.Controller.playerActingPhase(e,a))}))}}},47:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CardView=void 0;const s=n(913);class i{static renderCard(e,t){const n=e.getSuit(),s=e.getRank(),r="H"===n||"D"===n?"text-red-600":"text-black",a=i.getSuitSymbol(n);return`\n    <div class="card ${"normal"===t?"h-36":"h-32"} ${"normal"===t?"w-28":"w-24"} relative mx-1 cursor-pointer">\n      <div class="back rounded shadow-xl absolute bg-gradient-to-br from-red-900 to-red-600 border-4 border-white flex justify-center items-center ${r}">\n        <div class="text-3xl text-white opacity-50">♦</div>\n      </div>\n      <div class="front rounded shadow-xl bg-white absolute flex justify-center items-center ${r}">\n        <div class="w-4 text-center absolute top-0 left-1">\n          <div class="h-4 text-l">${s}</div>\n          <div class="h-4 mt-1">${a}</div>\n        </div>\n        <div class="text-2xl">${a}</div>\n        <div class="w-4 text-center absolute bottom-0 right-1 rotate-180">\n          <div class="h-4 text-l">${s}</div>\n          <div class="h-4 mt-1">${a}</div>\n        </div>\n      </div>\n    </div>\n    `}static rotateCards(e,t="notInitial"){const n=null===s.MAINFIELD||void 0===s.MAINFIELD?void 0:s.MAINFIELD.querySelector(`#${e}`);if(!n)return;const i=Array.from(n.querySelectorAll(".card"));if("houseCardDiv"===e&&"initial"===t){const e=i[0];e&&(this.addRotateClass(e,".front","rotate-front"),this.addRotateClass(e,".back","rotate-back"))}else i.forEach((e=>{this.addRotateClass(e,".front","rotate-front"),this.addRotateClass(e,".back","rotate-back")}))}static addRotateClass(e,t,n){const s=e.querySelector(t);s&&s.classList.add(n)}static getSuitSymbol(e){switch(e){case"H":return"♥";case"D":return"♦︎";case"C":return"♣";default:return"♠"}}}t.CardView=i},766:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MainView=void 0;const s=n(913),i=n(913),r=n(47);class a{static render(e){if(null!==s.MAINFIELD){a.displayBlock(s.MAINFIELD);const t=e.getPlayers();s.MAINFIELD.innerHTML=`\n        <div class="h-screen flex justify-center" style="background: #1D4434; color: white;">            \n          <div class="container pt-5">\n            <p id="house" class="text-center text-yellow-400 text-3xl">House</p>\n            <div class="flex justify-center py-2">\n              <button class="bg-white value-circle rounded-full cursor-default" disabled>\n                <p id="houseScore" class="text-black mb-1 font-bold text-xl">0</p>\n              </button>\n            </div>\n            <div id="houseStatusDiv" class="flex justify-center pt-1 pb-2">\n              <button class="bg-gray-600 shadow-xl rounded-lg w-40 py-1 cursor-default" disabled>\n                WAITING\n              </button>\n            </div>\n            <div id="houseCardDiv" class="flex justify-center py-2 relative"></div>\n            \n            <div id="playersDiv" class="flex justify-center">\n              <div id="bot1Div" class="flex w-1/4 flex-col items-center pt-0">\n                <p class="text-center text-yellow-400 text-2xl">BOT<span class="text-3xl">1</span></p>\n                <div id="bot1ChipDiv" class="text-center text-white flex p-1 justify-between">\n                  <p class="rem1 px-2 text-left">BET:<span id="bot1BetAmount" class="text-xl">${t[0].getBet()}</span></p>\n                  <p class="rem1 px-2 text-left">CHIP:<span id="bot1OwnChips" class="text-xl">${t[0].getChips()}</span></p>\n                </div>\n                <div class="flex justify-center py-2">\n                  <button class="bg-white value-circle rounded-full cursor-default" disabled>\n                    <p id="bot1Score" class="text-black mb-1 font-bold text-xl">0</p>\n                  </button>\n                </div>\n                <div id="bot1StatusDiv" class="flex justify-center py-1">\n                  <button class="bg-gray-600 shadow-xl rounded-lg w-40 py-1 cursor-default" disabled>\n                  WAITING\n                  </button>\n                </div>\n                <div id="bot1CardDiv" class="flex justify-center pt-4 relative"></div>\n              </div>\n\n              <div id="userDiv" class="flex w-1/2 flex-col items-center pt-[7rem]">\n                <p class="text-center text-yellow-400 text-3xl">${t[1].getName()}</p>\n                <div id="playerChipDiv" class="text-center text-white flex p-1 justify-between">\n                  <p class="rem1 px-2 text-left">BET: <span id="onBetChips" class="text-xl">${t[1].getBet()}</span></p>\n                  <p class="rem1 px-2 text-left">CHIP: <span id="ownChips" class="text-xl">${t[1].getChips()}</span></p>\n                </div>\n                <div class="flex justify-center py-2">\n                  <button class="bg-white value-circle rounded-full cursor-default" disabled>\n                    <p id="playerScore" class="text-black mb-1 font-bold text-xl">0</p>\n                  </button>\n                </div>\n                <div id="playerStatusDiv" class="flex justify-center py-1">\n                  <button class="bg-gray-600 shadow-xl rounded-lg w-40 py-1 cursor-default" disabled>\n                    WAITING\n                  </button>\n                </div>\n                <div id="userCardDiv" class="flex justify-center pt-4 relative"></div>\n                <div id="betOrActionDiv"></div>\n              </div>\n\n              <div id="bot2Div" class="flex w-1/4 flex-col items-center pt-0">\n                <p id="bot2" class="text-center text-yellow-400 text-2xl">BOT<span class="text-3xl">2</span></p>\n                <div id="bot2ChipDiv" class="text-center text-white flex p-1 justify-between">\n                  <p class="rem1 px-2 text-left">BET:<span id="bot2BetAmount" class="text-xl">${t[2].getBet()}</span></p>\n                  <p class="rem1 px-2 text-left">CHIP:<span id="bot2OwnChips" class="text-xl">${t[2].getChips()}</span></p>\n                </div>\n                <div class="flex justify-center py-2">\n                  <button class="bg-white value-circle rounded-full cursor-default" disabled>\n                    <p id="bot2Score" class="text-black mb-1 font-bold text-xl">0</p>\n                  </button>\n                </div>\n                <div id="bot2StatusDiv" class="flex justify-center py-1">\n                  <button class="bg-gray-600 shadow-xl rounded-lg w-40 py-1 cursor-default" disabled>\n                  WAITING\n                  </button>\n                </div>\n                <div id="bot2CardDiv" class="flex justify-center pt-4 relative"></div>\n              </div>\n            </div>\n          </div>\n          <div id="modalContent" class="text-black"></div>\n        </div>\n      `,a.renderPlayerHand(e)}}static setStatusField(e,t){if(!s.MAINFIELD)return;const n=s.MAINFIELD.querySelector(`#${{house:"houseStatusDiv",bot1:"bot1StatusDiv",player:"playerStatusDiv",bot2:"bot2StatusDiv"}[t]}`);if(n){const t=i.STATUSCOLOR[e]||"bg-gray-600";n.innerHTML=`\n        <button class="${t} rounded-lg w-40 py-1 cursor-default" disabled>\n          ${e}\n        </button>\n        `}}static setHouseScore(e,t="notInitial"){const n=null===s.MAINFIELD||void 0===s.MAINFIELD?void 0:s.MAINFIELD.querySelector("#houseScore"),i="initial"===t?e.getHouse().getHand()[0].getRankNumber().toString():e.getHouse().getHandScore().toString();n&&(n.innerHTML=i)}static setPlayerScore(e,t){const n=null===s.MAINFIELD||void 0===s.MAINFIELD?void 0:s.MAINFIELD.querySelector(`#${{bot1:"bot1Score",user:"playerScore",bot2:"bot2Score"}[t]}`);n&&(n.innerHTML=e.getHandScore().toString())}static setPlayerBetAmount(e,t){const n=null===s.MAINFIELD||void 0===s.MAINFIELD?void 0:s.MAINFIELD.querySelector("#onBetChips");null!==n&&(n.innerHTML=t.toString(),e.setBet(t))}static setPlayerOwnChips(e,t){const n=null===s.MAINFIELD||void 0===s.MAINFIELD?void 0:s.MAINFIELD.querySelector("#ownChips");null!==n&&(n.innerHTML=t.toString(),e.setChips(t))}static setBotBetAmount(e,t){const n="BOT1"===e.getName()?"bot1BetAmount":"bot2BetAmount",i=null===s.MAINFIELD||void 0===s.MAINFIELD?void 0:s.MAINFIELD.querySelector(`#${n}`);null!==i&&(i.innerHTML=t.toString(),e.setBet(t))}static setBotOwnChips(e,t){const n="BOT1"===e.getName()?"bot1OwnChips":"bot2OwnChips",i=null===s.MAINFIELD||void 0===s.MAINFIELD?void 0:s.MAINFIELD.querySelector(`#${n}`);null!==i&&(i.innerHTML=t.toString(),e.setChips(t))}static renderPlayerHand(e){const t=[e.getHouse(),...e.getPlayers()];["#houseCardDiv","#bot1CardDiv","#userCardDiv","#bot2CardDiv"].forEach(((e,n)=>{const i=null===s.MAINFIELD||void 0===s.MAINFIELD?void 0:s.MAINFIELD.querySelector(e),a=t[n],o=n%2==0?"normal":"botSize";i.innerHTML="",a.getHand().forEach((e=>{i.innerHTML+=r.CardView.renderCard(e,o)}))}))}static displayNone(e){e.classList.remove("block"),e.classList.add("hidden")}static displayBlock(e){e.classList.remove("hidden"),e.classList.add("block")}}t.MainView=a},489:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ResultModalView=void 0;const s=n(603),i=n(913),r=n(430);class a{static render(e){const t=null===i.MAINFIELD||void 0===i.MAINFIELD?void 0:i.MAINFIELD.querySelector("#modalContent");if(!t)return;const n=a.compareScore(e);if(e.getPlayers()[1].getChips()>0){t.innerHTML=a.createModalContent(e,n);const i=t.querySelector("#modalOverlay"),r=t.querySelector("#modalDiv");a.showModal(i,r);const o=t.querySelector("#nextBtn"),l=t.querySelector("#quitBtn");null==o||o.addEventListener("click",(()=>{a.hideModal(i,r),s.Controller.roundOverPhase(e)})),null==l||l.addEventListener("click",(()=>{a.hideModal(i,r),s.Controller.renderStartPage()}))}else{t.innerHTML=a.createGameOverContent();const n=t.querySelector("#modalOverlay"),i=t.querySelector("#modalDiv");a.showModal(n,i);const o=t.querySelector("#homeBtn"),l=t.querySelector("#continueBtn");o.addEventListener("click",(()=>{a.hideModal(n,i),s.Controller.renderStartPage()})),l.addEventListener("click",(()=>{a.hideModal(n,i);const t=e.getPlayers()[1].getName(),o=e.getGameType(),l=new r.Player("BOT1","ai",o),d=new r.Player(t,"user",o),c=new r.Player("BOT2","ai",o);s.Controller.startBlackJack([l,d,c])}))}}static createModalContent(e,t){const n=e.getPlayers()[1].getBet(),s=a.judgeWinOrLose(t,n);return`\n        <div id="modalOverlay" class="fixed inset-0 bg-black opacity-70 z-10 hidden"></div>\n        <div id="modalDiv" class="fixed inset-0 flex items-center justify-center opacity-0 invisible transition-opacity z-20">\n            <div class="bg-white shadow-lg rounded-xl w-1/3 p-5">\n                <div class="text-3xl font-bold tracking-wider text-center mb-5">\n                    Round <span class="text-4xl">${e.getRound()}</span>\n                </div>\n                <table class="w-full mb-8">\n                    <thead class="flex w-full rounded-t-xl bg-zinc-100">\n                    <tr class="flex w-full border-b-2">\n                        <th class="py-4 w-4/12">NAME</th>\n                        <th class="py-4 w-4/12">WIN / LOSE</th>\n                        <th class="py-4 w-4/12">EARNINGS</th>\n                    </tr>\n                    </thead>\n                    <tbody class="flex flex-col items-center justify-between w-full rounded-b-xl">\n                        <tr class="flex w-full border-b">\n                            <td class="text-center py-4 w-4/12">BOT<span class="text-xl">1</span></td>\n                            <td class="text-center py-4 w-4/12">${s}</td>\n                            <td class="text-center py-4 w-4/12">$${t-n}</td>\n                        </tr>\n                        <tr class="flex w-full border-b">\n                            <td class="text-center py-4 w-4/12">${e.getPlayers()[1].getName()}</td>\n                            <td class="text-center py-4 w-4/12">${s}</td>\n                            <td class="text-center py-4 w-4/12">$${t-n}</td>\n                        </tr>\n                        <tr class="flex w-full border-b">\n                            <td class="text-center py-4 w-4/12">BOT<span class="text-xl">2</span></td>\n                            <td class="text-center py-4 w-4/12">${s}</td>\n                            <td class="text-center py-4 w-4/12">$${t-n}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <div class="flex justify-center">\n                    <button id="quitBtn" type="button"\n                    class="border-4 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2">\n                    QUIT\n                    </button>\n                    <button id="nextBtn" type="button"\n                    class="bg-gray-900 hover:bg-gray-700 text-white font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2">\n                    NEXT\n                    </button>\n                </div>\n            </div>\n        </div>\n    `}static createGameOverContent(){return'\n        <div id="modalOverlay" class="fixed inset-0 bg-black opacity-70 z-10 hidden"></div>\n        <div id="modalDiv" class="fixed inset-0 flex items-center justify-center opacity-0 invisible transition-opacity z-20">\n            <div class="bg-white shadow-lg rounded-xl w-1/4 p-8">\n                <div class="text-3xl font-bold tracking-wider text-center mb-5">\n                GAME OVER\n                </div>\n                <div class="flex justify-between">\n                    <div class="w-1/2 pr-2">\n                        <button id="homeBtn" type="button"\n                        class="w-full h-full border hover:bg-gray-200 border-gray-900 focus:ring-2 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2">\n                        HOME\n                        </button>\n                    </div>\n                    <div class="w-1/2 pl-2">\n                        <button id="continueBtn" type="button"\n                        class="w-full h-full bg-green-500 hover:bg-green-400 text-white font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2">\n                        CONTINUE\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    '}static compareScore(e){const t=e.getHouse(),n=e.getPlayers()[1],s=n.getBet();let i=0;const r=t.getGameStatus();switch(n.getGameStatus()){case"bust":i=0;break;case"surrender":i+=s/2;break;case"blackjack":i="blackjack"===r?s:Math.floor(2.5*s);break;case"double":i="bust"===r||n.getHandScore()>t.getHandScore()?2*s:n.getHandScore()===t.getHandScore()?s:0;break;case"stand":i="blackjack"===r?0:n.getHandScore()===t.getHandScore()?s:"bust"===r||t.getHandScore()<n.getHandScore()?2*s:0}const a=n.getChips();return n.setChips(i+a),i}static showModal(e,t){e&&t&&(e.classList.remove("hidden"),t.classList.remove("invisible","opacity-0"),t.classList.add("opacity-1"))}static hideModal(e,t){e&&t&&(e.classList.add("hidden"),t.classList.add("invisible","opacity-0"),t.classList.remove("opacity-1"))}static judgeWinOrLose(e,t){return e===t?"DRAW":e>t?"WIN":"LOSE"}}t.ResultModalView=a},693:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StartView=void 0;const s=n(913),i=n(766),r=n(603),a=n(430);t.StartView=class{static render(){s.STARTPAGE&&(i.MainView.displayBlock(s.STARTPAGE),s.STARTPAGE.innerHTML='\n        <div class="background-container flex items-center justify-center">\n            <form class="startGameForm">\n                <div class="mb-4">\n                    <label class="block mb-2 font-bold text-white text-xl">NAME</label>\n                    <input class="w-full px-3 py-2 border rounded-xl focus:outline-green-600 shadow-xl"\n                        id="userName"\n                        type="text"\n                        value="TERADAD"\n                        placeholder="Name"\n                        required\n                    >\n                </div>\n                <div class="mb-9">\n                    <label class="block mb-2 font-bold text-white text-xl">GAME</label>\n                    <select class="w-full px-3 py-3 border rounded-xl focus:outline-green-600 shadow-xl" id="gameType">\n                        <option value="blackjack">BlackJack</option>\n                        <option value="porker" disabled>Porker - coming soon -</option>\n                    </select>\n                </div>\n                <button id="startBtn" class="w-full mt-3 px-4 py-3 font-bold text-white bg-green-600 rounded-xl hover:bg-green-500 shadow-xl transition-colors duration-300"\n                    type="submit">\n                    START GAME\n                </button>\n            </form>\n        </div>\n      ',null===s.STARTPAGE||void 0===s.STARTPAGE||s.STARTPAGE.querySelector(".startGameForm").addEventListener("submit",(e=>{e.preventDefault();const t=null===s.STARTPAGE||void 0===s.STARTPAGE?void 0:s.STARTPAGE.querySelector("#userName"),n=null===s.STARTPAGE||void 0===s.STARTPAGE?void 0:s.STARTPAGE.querySelector("#gameType");if(s.STARTPAGE){i.MainView.displayNone(s.STARTPAGE);const e=new a.Player("BOT1","ai",n.value),o=new a.Player(t.value,"user",n.value),l=new a.Player("BOT2","ai",n.value);r.Controller.startBlackJack([e,o,l])}})))}}}},t={};(function n(s){var i=t[s];if(void 0!==i)return i.exports;var r=t[s]={exports:{}};return e[s].call(r.exports,r,r.exports,n),r.exports})(603).Controller.renderStartPage()})();